{"version":3,"file":"static/js/186.c338f189.chunk.js","mappings":"8LAyCA,UArCgB,WACd,OAA6BA,EAAAA,EAAAA,UAAS,MAAtC,eAAOC,EAAP,KAAgBC,EAAhB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAgBR,OAdAE,EAAAA,EAAAA,YAAU,YAENC,EAAAA,EAAAA,IAAUH,GACPI,MAAK,SAAAC,GACJN,EAAUM,EACX,IACAC,OAAM,SAAAC,GACLC,QAAQC,IAAIF,EACb,GAIN,GAAE,CAACP,KAGF,6BACe,OAAZF,GAA+C,IAA3BA,EAAQY,QAAQC,QACnC,uBAAG,yBAEH,wBACe,OAAZb,GACCA,EAAQY,QAAQE,KAAI,SAAAC,GAAI,OACtB,2BACE,yBAAG,WAASA,EAAKC,UAChBD,EAAKE,UAFCF,EAAKG,GADQ,OAUnC,C,+LCrCKC,EAAW,+BACXC,EAAU,mCAEHC,EAAgB,mCAAG,sGAEtBC,EAFsB,UAELH,EAFK,uCAEkCC,EAFlC,mCAILG,EAAAA,EAAAA,IAAUD,GAJL,cAItBf,EAJsB,gBAMfA,EAASiB,KANM,gFAQtB,IAAIC,MAAM,KAAIC,SARQ,0DAAH,qDAYhBC,EAAU,mCAAG,WAAMzB,GAAN,yFAEhB0B,EAFgB,UAEAT,EAFA,kBAEkBjB,EAFlB,oBAEqCkB,EAFrC,mCAICG,EAAAA,EAAAA,IAAUK,GAJX,cAIhBrB,EAJgB,gBAMTA,EAASiB,KANA,gFAQhB,IAAIC,MAAM,KAAIC,SARE,0DAAH,sDAYVG,EAAO,mCAAG,WAAM3B,GAAN,yFAEb4B,EAFa,UAEAX,EAFA,kBAEkBjB,EAFlB,4BAE6CkB,EAF7C,mCAIIG,EAAAA,EAAAA,IAAUO,GAJd,cAIbvB,EAJa,gBAMNA,EAASiB,KANH,gFAQb,IAAIC,MAAM,KAAIC,SARD,0DAAH,sDAYPrB,EAAS,mCAAG,WAAMH,GAAN,yFAEf6B,EAFe,UAECZ,EAFD,kBAEmBjB,EAFnB,4BAE8CkB,EAF9C,mCAIEG,EAAAA,EAAAA,IAAUQ,GAJZ,cAIfxB,EAJe,gBAMRA,EAASiB,KAND,gFAQf,IAAIC,MAAM,KAAIC,SARC,0DAAH,sDAYTM,EAAU,mCAAG,WAAMC,GAAN,yFAEhBD,EAFgB,UAEAb,EAFA,iCAEiCC,EAFjC,iCAEiEa,EAFjE,YAIhB1B,EAAWgB,EAAAA,EAAAA,IAAUS,GAJL,kBAMfzB,GANe,sCAQhB,IAAIkB,MAAM,KAAIC,SARE,wDAAH,qD","sources":["components/Reviews/Reviews.jsx","services/api.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getReview } from 'services/api';\n\nconst Reviews = () => {\n  const [reviews, setReview] = useState(null);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const fetchCast = () => {\n      getReview(movieId)\n        .then(response => {\n          setReview(response);\n        })\n        .catch(error => {\n          console.log(error);\n        });\n    };\n\n    fetchCast();\n  }, [movieId]);\n\n  return (\n    <section>\n      {reviews !== null && reviews.results.length === 0 ? (\n        <p>There is no reviews</p>\n      ) : (\n        <ul>\n          {reviews !== null &&\n            reviews.results.map(item => (\n              <li key={item.id}>\n                <p>Author: {item.author}</p>\n                {item.content}\n              </li>\n            ))}\n        </ul>\n      )}\n    </section>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '5591255f50bf473d44ec0f5688b59618';\n\nexport const getTrendingMovie = async () => {\n  try {\n    const trendingUrl = `${BASE_URL}/trending/movie/day?api_key=${API_KEY}&language=en-US&page=1`;\n\n    const response = await axios.get(trendingUrl);\n\n    return await response.data;\n  } catch (err) {\n    throw new Error(err.message);\n  }\n};\n\nexport const getDetails = async movieId => {\n  try {\n    const detailsUrl = `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}&language=en-US&page=1`;\n\n    const response = await axios.get(detailsUrl);\n\n    return await response.data;\n  } catch (err) {\n    throw new Error(err.message);\n  }\n};\n\nexport const getCast = async movieId => {\n  try {\n    const castUrl = `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US&page=1`;\n\n    const response = await axios.get(castUrl);\n\n    return await response.data;\n  } catch (err) {\n    throw new Error(err.message);\n  }\n};\n\nexport const getReview = async movieId => {\n  try {\n    const reviewsUrl = `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`;\n\n    const response = await axios.get(reviewsUrl);\n\n    return await response.data;\n  } catch (err) {\n    throw new Error(err.message);\n  }\n};\n\nexport const getByQuery = async query => {\n  try {\n    const getByQuery = `${BASE_URL}/search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1}`;\n\n    const response = axios.get(getByQuery);\n\n    return response;\n  } catch (err) {\n    throw new Error(err.message);\n  }\n};\n"],"names":["useState","reviews","setReview","movieId","useParams","useEffect","getReview","then","response","catch","error","console","log","results","length","map","item","author","content","id","BASE_URL","API_KEY","getTrendingMovie","trendingUrl","axios","data","Error","message","getDetails","detailsUrl","getCast","castUrl","reviewsUrl","getByQuery","query"],"sourceRoot":""}